# Lines starting with '#' are comments.
# Each line is a file pattern followed by one or more owners.

# More details are here: https://help.github.com/articles/about-codeowners/

# The '*' pattern is global owners.

*    @dotnet/docs

# Order is important. The last matching pattern has the most precedence.
# The folders are ordered as follows:
# . Guides
# . .NET Core sections
# . .NET Framework sections
# . .NET Standard
# . Architecture e-books

# In each subsection, folders are order first by depth, then alphabetically.
# This should make it easy to add new rules without breaking existing ones.

######## API landing page ###########
/api/ @dotnet/docs

############ WHATS NEW ###############
/docs/whats-new/ @billwagner

############  GUIDES  ################
# .NET Core
/docs/core/ @dotnet/docs

# .NET Framework
/docs/framework/ @dotnet/docs

# .NET Standard
/docs/standard/ @gewarren

# The C# Guide:
/docs/csharp/ @BillWagner

# The F# Guide:
/docs/fsharp/ @cartermp

# The Visual Basic Guide:
/docs/visual-basic/ @KathleenDollard

# The ML.NET Guide:
/docs/machine-learning/ @luisquintanilla

# The .NET for Apache Spark Guide:
/docs/spark/ @mamccrea

# The .NET Architecture Guide:
/docs/architecture/ @nishanil

# The Desktop WPF Guide:
/docs/desktop-wpf/ @Thraka

# Azure Guide
/docs/azure/ @CamSoper

# Includes files
/includes/ @dotnet/docs

############### .NET Core ########################
# What's New
/docs/core/whats-new/ @Thraka
# Deployment
/docs/core/deploying/ @Thraka
# Diagnostics
/docs/core/diagnostics/ @sdmaclea @dotnet/docs
# Docker
/docs/core/docker/ @IEvangelist
# Install
/docs/core/install/ @Thraka
# Breaking changes
/docs/core/compatibility/ @gewarren
# Project SDKs
/docs/core/project-sdk/ @gewarren
# Config settings
/docs/core/run-time-config/ @gewarren
# Tools
/docs/core/tools/ @tdykstra
# Tutorials
/docs/core/tutorials/ @tdykstra

################### .NET FRAMEWORK ##################
# App domains
/docs/framework/app-domains/ @gewarren
# Config - WinForms
/docs/framework/configure-apps/file-schema/winforms/ @Thraka
# Deployment
/docs/framework/deployment/ @Thraka
# Installation
/docs/framework/install/ @Thraka
# Migration guide
/docs/framework/migration-guide/ @gewarren
# Reflection
/docs/framework/reflection-and-codedom/ @Thraka
# Resources
/docs/framework/resources/ @Thraka
# Tools
/docs/framework/tools/ @tdykstra
# UI Automation
/docs/framework/ui-automation/ @Thraka
# What's New
/docs/framework/whats-new/ @gewarren
# Winforms
/docs/framework/winforms/ @Thraka
# WPF
/docs/framework/wpf/ @Thraka
# XAML Services
/docs/framework/xaml-services/ @Thraka
# ADO.NET
/docs/framework/data/ @stevestein
# NCL
/docs/framework/configure-apps/file-schema/network/ @karelz
/docs/framework/network-programming/ @karelz
# WCF
/docs/framework/configure-apps/file-schema/wcf/ @HongGit
/docs/framework/wcf/ @HongGit

################## .NET STANDARD ##################
# Analyzers
/docs/standard/analyzers/ @IEvangelist
# Assembly
/docs/standard/assembly/ @IEvangelist
# Asynchronous Programming Patterns
/docs/standard/asynchronous-programming-patterns/ @BillWagner
# Attributes
/docs/standard/attributes/ @tdykstra
# Base types
/docs/standard/base-types/ @Thraka
# Collections
/docs/standard/collections/ @IEvangelist
# Data
/docs/standard/data/ @gewarren
# Data - SQLite
/docs/standard/data/sqlite/ @bricelam
# Datetime
/docs/standard/datetime/ @Thraka
# Design guidelines
/docs/standard/design-guidelines/ @BillWagner
# Events
/docs/standard/events/ @IEvangelist
# Exceptions
/docs/standard/exceptions/ @tdykstra
# GC
/docs/standard/garbage-collection/ @gewarren
# Generics
/docs/standard/generics/ @Thraka
# Globalization
/docs/standard/globalization-localization/ @dotnet/docs
# I/O
/docs/standard/io/ @Thraka
# Library guidance
/docs/standard/library-guidance/ @jamesnk
# LINQ
/docs/standard/linq/ @dotnet/docs
# Memory and spans
/docs/standard/memory-and-spans/ @tdykstra
# Native Interop
/docs/standard/native-interop/ @jkoritzinsky
# Parallel programming
/docs/standard/parallel-programming/ @IEvangelist
# Security
/docs/standard/security/ @IEvangelist
# Serialization
/docs/standard/serialization/ @tdykstra
# Threading
/docs/standard/threading/ @BillWagner
# What's New
/docs/standard/whats-new/ @dotnet/docs

################## E-BOOKS ##################
# Blazor:
/docs/architecture/blazor-for-web-forms-developers/ @danroth27
# gRPC:
/docs/architecture/grpc-for-wcf-developers/ @shirhatti

################# Samples folder ##############

## These have been pulled directly from the samples repo:

/samples/snippets/csharp/ @BillWagner
# Visual Basic snippets:
/samples/snippets/visualbasic/ @BillWagner
# F# Snippets:
/samples/snippets/fsharp/ @cartermp

# System.Json samples:
/samples/snippets/core/system-text-json/ @tdykstra

# Text runes:
/samples/snippets/core/rune/  @tdykstra

# WPF folders:
/samples/snippets/xaml/wpf/   @thraka
/samples/snippets/csharp/wpf/   @thraka
/samples/snippets/visualbasic/wpf/   @thraka
/samples/snippets/desktop-guide/wpf/   @thraka

/samples/snippets/winforms/  @thraka


